plugins {
    id 'com.android.application' // Применяет плагин Android-приложения, необходимый для сборки приложений под Android.
    id 'org.jetbrains.kotlin.android' // Применяет плагин Kotlin Android, включающий поддержку Kotlin в проекте.
    id 'kotlin-android' // Альтернативный плагин для поддержки Kotlin (часто избыточен с предыдущим).
    id 'kotlin-kapt' // Применяет плагин Kotlin Annotation Processing Tool (KAPT) для обработки аннотаций.
}

android {
    namespace 'com.example.mobiledevelopmentcourselabapp' // Устанавливает имя пакета для вашего приложения.
    compileSdk 33 // Указывает версию Android SDK, используемую для компиляции (в данном случае Android 13).

    defaultConfig {
        applicationId "com.example.mobiledevelopmentcourselabapp" // Устанавливает уникальный идентификатор приложения, обычно совпадающий с именем пакета.
        minSdk 24 // Определяет минимальную версию Android SDK, необходимую для запуска приложения (Android 7.0 - Nougat).
        targetSdk 33 // Указывает целевую версию Android SDK, для которой предназначено приложение (Android 13).
        versionCode 1 // Внутренний номер версии для управления обновлениями приложения.
        versionName "1.0" // Имя версии, отображаемое пользователям.
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner" // Устанавливает инструмент для запуска инструментальных тестов Android.
    }

    buildTypes {
        release { // Конфигурация для типа сборки "релиз".
            minifyEnabled false // Отключает минификацию кода для сборки релиза.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' // Указывает файлы правил ProGuard для обфускации и оптимизации кода.
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17 // Устанавливает совместимость исходного кода с Java 17.
        targetCompatibility JavaVersion.VERSION_17 // Устанавливает целевую версию JVM для скомпилированного кода на Java 17.
    }
    kotlinOptions {
        jvmTarget = '17' // Устанавливает целевую версию JVM для компиляции Kotlin на 17.
    }
    buildFeatures {
        viewBinding true // Включает ViewBinding для упрощения доступа к представлениям в ваших макетах.
    }
}

ext {
    set("daggerVersion", "2.50") // Определяет переменную для версии зависимости Dagger.
    set("moxyVersion", "2.2.2") // Определяет переменную для версии зависимости Moxy.
}

dependencies {
    // Основные зависимости Android
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    // Библиотеки жизненного цикла
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'

    // Компонент навигации
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'

    // Загрузка изображений
    implementation 'com.github.bumptech.glide:glide:4.16.0'

    // Генерация данных
    implementation 'com.github.javafaker:javafaker:1.0.2'

    // Зависимости для тестирования
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Внедрение зависимостей с Dagger
    implementation("com.google.dagger:dagger:$daggerVersion")
    kapt("com.google.dagger:dagger-compiler:$daggerVersion")

    // MVP-фреймворк - Moxy
    implementation "com.github.moxy-community:moxy:$moxyVersion"
    kapt "com.github.moxy-community:moxy-compiler:$moxyVersion"
    implementation "com.github.moxy-community:moxy-androidx:$moxyVersion"
    implementation "com.github.moxy-community:moxy-ktx:$moxyVersion"
}